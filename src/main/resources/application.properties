#Port to run the application
server.port = 8080

#Database configuration
#spring.datasource.url = jdbc:mysql://hostname:port/database_name

spring.datasource.url = jdbc:mysql://host:3306/isec_assessment2
spring.datasource.username =
spring.datasource.password = 

spring.jpa.hibernate.ddl-auto=update

#JSP configuration
spring.mvc.view.prefix = /WEB-INF/jsp/
spring.mvc.view.suffix = .jsp

#OAuth Application Properties
spring.security.oauth2.client.registration.asgardeo.client-name=Asgardeo
spring.security.oauth2.client.registration.asgardeo.client-id=
spring.security.oauth2.client.registration.asgardeo.client-secret=
spring.security.oauth2.client.registration.asgardeo.redirect-uri={baseUrl}/login/oauth2/code/asgardeo
spring.security.oauth2.client.registration.asgardeo.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.asgardeo.scope=openid,address,email,phone,profile

client.post-logout-uri: http://localhost:8080/

# if you use tomcat , you should set the logout url like this. and make sure add this to asgardeo console authorized redirect urls
#client.post-logout-uri: http://localhost:8080/ServiceReservation_war/

#Asgardeo Properties
spring.security.oauth2.client.provider.asgardeo.issuer-uri=


# Define a list of locations and available times CSV format
reservation.locations=Colombo,Gampaha,Kalutara,Kandy,Matale,Nuwara Eliya,Galle,Matara,Hambantota,Jaffna,Kilinochchi,Mannar,Mullaitivu,Vavuniya,Batticaloa,Ampara,Trincomalee,Kurunegala,Puttalam,Anuradhapura,Polonnaruwa,Badulla,Monaragala,Ratnapura,Kegalle

reservation.times=10 AM,11 AM,12 PM
